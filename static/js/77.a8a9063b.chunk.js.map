{"version":3,"file":"static/js/77.a8a9063b.chunk.js","mappings":"mOAEaA,EAAYC,EAAAA,GAAAA,GAAH,8HAQTC,EAASD,EAAAA,GAAAA,IAAH,mF,SCgBnB,EAtBsB,SAAC,GAAe,IAAD,EAAZE,EAAY,EAAZA,MACjBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACL,EAAD,WACE,SAAC,KAAD,CAASM,GAAE,kBAAaH,EAAMI,IAAMC,MAAO,CAAEC,KAAML,GAAnD,UACE,0BACE,SAACF,EAAD,CACEQ,IACEP,EAAMQ,YAAN,yCACsCR,EAAMQ,aAD5C,sDAGMR,EAAMS,aAHZ,QAGqBT,EAAMU,KAH3B,gBAMFC,IAAKX,EAAMS,aAXHT,EAAMI,GAiBzB,C,qICKD,EA3BmB,SAAC,GAAkB,IAAhBQ,EAAe,EAAfA,SACpB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAYA,OACE,kBAAMH,SAPa,SAAAI,GACnBA,EAAEC,iBACFL,EAASE,GACTC,EAAS,GACV,EAGC,WACE,kBACEG,KAAK,OACLR,KAAK,SACLS,YAAY,eACZC,WAAS,EACTC,SAjBe,SAAAL,GACnBD,EAASC,EAAEM,OAAOR,MACnB,KAiBG,mBAAQI,KAAK,SAAb,SAAsB,aAG3B,E,0BCzBYK,E,OAAsBzB,GAAAA,GAAH,iGC2DhC,MAtDA,WAAmB,IAAD,EAChB,GAAwC0B,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4Bb,EAAAA,EAAAA,UAAS,MAArC,eAAOc,EAAP,KAAeC,EAAf,KACA,GAAkCf,EAAAA,EAAAA,WAAS,GAA3C,eAAOgB,EAAP,KAAkBC,EAAlB,KACMC,EAAK,UAAGN,EAAaO,IAAI,gBAApB,QAAgC,GA8B3C,OA5BAC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAGA,IAAMG,EAAW,mCAAG,oGAEhBJ,GAAa,GAFG,UAGKK,EAAAA,EAAAA,IAAeJ,GAHpB,OAGVK,EAHU,OAIhBR,EAAUQ,EAAOC,SAJD,gDAMhBC,QAAQC,IAAI,KAAEC,SANE,yBAQhBV,GAAa,GARG,4EAAH,qDAWjBI,GAZC,CAaF,GAAE,CAACH,KAaF,iCACE,SAAC,EAAD,CAAYnB,SAZS,SAAAE,GACnBA,IAAUiB,GAAOH,EAAU,IAM/BF,EAJc,KAAVZ,EAIY,CAAEiB,MAAOjB,GAHP,CAAC,EAIpB,IAKIe,IAAa,uBAAG,eAChBF,GAA4B,IAAlBA,EAAOc,QAA0B,KAAVV,IAChC,uBAAG,0DAEJJ,IACC,0BACE,SAACJ,EAAD,UACGI,EAAOe,KAAI,SAAA1C,GAAK,OACf,SAAC2C,EAAA,EAAD,CAAe3C,MAAOA,GAAYA,EAAMI,GADzB,UAQ5B,C","sources":["components/MovieListItem/MovieListItem.styled.js","components/MovieListItem/MovieListItem.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: auto;\n  width: 22%;\n`;\n\nexport const Poster = styled.img`\n  max-width: 100%;\n  height: auto;\n  object-fit: cover;\n`;\n","import React from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { MovieItem, Poster } from './MovieListItem.styled';\n\nconst MovieListItem = ({ movie }) => {\n  const location = useLocation();\n  return (\n    <MovieItem key={movie.id}>\n      <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n        <div>\n          <Poster\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                : `https://placehold.co/400x600?text=${\n                    movie.title ?? movie.name\n                  }&font=roboto`\n            }\n            alt={movie.title}\n          />\n        </div>\n      </NavLink>\n    </MovieItem>\n  );\n};\n\nexport default MovieListItem;\n","import React, { useState } from 'react';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(value);\n    setValue('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"query \"\n        placeholder=\"Search movie\"\n        autoFocus\n        onChange={handleChange}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import styled from 'styled-components';\n\nexport const SearchFormMovieList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n","import MovieListItem from 'components/MovieListItem/MovieListItem';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovie } from 'services/API';\nimport { SearchFormMovieList } from './Movies.styled';\n\nfunction Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    const fetchMovies = async () => {\n      try {\n        setIsLoading(true);\n        const result = await getSearchMovie(query);\n        setMovies(result.results);\n      } catch (e) {\n        console.log(e.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [query]);\n\n  const handleSubmitForm = value => {\n    if (value !== query) setMovies([]);\n\n    if (value === '') {\n      setSearchParams({});\n      return;\n    }\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmitForm} />\n      {isLoading && <p>Loading...</p>}\n      {movies && movies.length === 0 && query !== '' && (\n        <p>We don't have such films. Try to find something else!</p>\n      )}\n      {movies && (\n        <div>\n          <SearchFormMovieList>\n            {movies.map(movie => (\n              <MovieListItem movie={movie} key={movie.id} />\n            ))}\n          </SearchFormMovieList>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Movies;\n"],"names":["MovieItem","styled","Poster","movie","location","useLocation","to","id","state","from","src","poster_path","title","name","alt","onSubmit","useState","value","setValue","e","preventDefault","type","placeholder","autoFocus","onChange","target","SearchFormMovieList","useSearchParams","searchParams","setSearchParams","movies","setMovies","isLoading","setIsLoading","query","get","useEffect","fetchMovies","getSearchMovie","result","results","console","log","message","length","map","MovieListItem"],"sourceRoot":""}