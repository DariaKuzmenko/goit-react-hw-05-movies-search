{"version":3,"file":"static/js/304.14554ef0.chunk.js","mappings":"oOAEaA,EAAYC,EAAAA,GAAAA,GAAH,8HAQTC,EAASD,EAAAA,GAAAA,IAAH,mF,SCgBnB,EAtBsB,SAAC,GAAe,IAAD,EAAZE,EAAY,EAAZA,MACjBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACL,EAAD,WACE,SAAC,KAAD,CAASM,GAAE,kBAAaH,EAAMI,IAAMC,MAAO,CAAEC,KAAML,GAAnD,UACE,0BACE,SAACF,EAAD,CACEQ,IACEP,EAAMQ,YAAN,yCACsCR,EAAMQ,aAD5C,sDAGMR,EAAMS,aAHZ,QAGqBT,EAAMU,KAH3B,gBAMFC,IAAKX,EAAMS,aAXHT,EAAMI,GAiBzB,C,0JCtBYQ,EAAiBd,EAAAA,GAAAA,IAAH,yHAOde,EAAYf,EAAAA,GAAAA,GAAH,kL,SC+BtB,MAnCA,WACE,OAA4BgB,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,2FAClBJ,GAAa,GADK,mBAGKK,EAAAA,EAAAA,MAHL,OAGVC,EAHU,OAIhBR,EAAUQ,EAAOC,SAJD,gDAMhBL,EAAS,KAAMM,SANC,yBAQhBR,GAAa,GARG,4EAAH,qDAWjBI,GACD,GAAE,KAED,+BACE,UAACV,EAAD,YACE,wBAAI,oBACHK,IAAa,uBAAG,eAChBE,IAAS,uBAAIA,KACd,SAACN,EAAD,UACGc,MAAMC,QAAQb,IACbA,EAAOc,OAAS,GAChBd,EAAOe,KAAI,SAAA9B,GAAK,OAAI,SAAC+B,EAAA,EAAD,CAAe/B,MAAOA,GAAYA,EAAMI,GAA5C,UAK3B,C","sources":["components/MovieListItem/MovieListItem.styled.js","components/MovieListItem/MovieListItem.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: auto;\n  width: 22%;\n`;\n\nexport const Poster = styled.img`\n  max-width: 100%;\n  height: auto;\n  object-fit: cover;\n`;\n","import React from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { MovieItem, Poster } from './MovieListItem.styled';\n\nconst MovieListItem = ({ movie }) => {\n  const location = useLocation();\n  return (\n    <MovieItem key={movie.id}>\n      <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n        <div>\n          <Poster\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                : `https://placehold.co/400x600?text=${\n                    movie.title ?? movie.name\n                  }&font=roboto`\n            }\n            alt={movie.title}\n          />\n        </div>\n      </NavLink>\n    </MovieItem>\n  );\n};\n\nexport default MovieListItem;\n","import styled from 'styled-components';\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const MovieList = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n","import MovieListItem from 'components/MovieListItem/MovieListItem';\nimport React, { useEffect, useState } from 'react';\nimport { getTrendMovies } from 'services/API';\nimport { MovieContainer, MovieList } from './Home.styled';\n\nfunction Home() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setIsLoading(true);\n      try {\n        const result = await getTrendMovies();\n        setMovies(result.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n  return (\n    <>\n      <MovieContainer>\n        <h1>Trending Movies</h1>\n        {isLoading && <p>Loading...</p>}\n        {error && <p>{error}</p>}\n        <MovieList>\n          {Array.isArray(movies) &&\n            movies.length > 0 &&\n            movies.map(movie => <MovieListItem movie={movie} key={movie.id} />)}\n        </MovieList>\n      </MovieContainer>\n    </>\n  );\n}\n\nexport default Home;\n"],"names":["MovieItem","styled","Poster","movie","location","useLocation","to","id","state","from","src","poster_path","title","name","alt","MovieContainer","MovieList","useState","movies","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchMovies","getTrendMovies","result","results","message","Array","isArray","length","map","MovieListItem"],"sourceRoot":""}