{"version":3,"file":"static/js/33.47a1b135.chunk.js","mappings":"gSAEaA,EAAgBC,EAAAA,GAAAA,IAAH,gDAIbC,EAAwBD,EAAAA,GAAAA,IAAH,wD,SCsFlC,MAjFA,WAA0B,IAAD,IACvB,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAeC,EAAAA,EAAAA,QAAM,oBAACL,EAASM,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAgBpD,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,2FACtBZ,GAAa,GADS,mBAGCa,EAAAA,EAAAA,IAAgBR,GAHjB,OAGdS,EAHc,OAIpBhB,EAAagB,GAJO,gDAMpBZ,EAAS,KAAMa,SANK,yBAQpBf,GAAa,GARO,4EAAH,qDAWrBY,GACD,GAAE,CAACP,KAEF,gCACGN,IAAa,uBAAG,eAChBE,IAAS,uBAAIA,IACC,OAAdJ,IACC,iCACE,SAACJ,EAAD,WACE,SAAC,KAAD,CAASuB,GAAIT,EAAaU,QAA1B,SAAmC,eAErC,UAACtB,EAAD,YACE,gBACEuB,IAAG,yCAAoCrB,EAAUsB,aACjDC,IAAKvB,EAAUwB,SAEjB,4BACE,wBAAKxB,EAAUwB,SACf,wBAAI,gBACJ,uBAAIxB,EAAUyB,gBACd,wBAAI,cACJ,uBAAIzB,EAAU0B,YACd,wBAAI,WACH1B,EAAU2B,QACT,wBACG3B,EAAU2B,OAAOC,KAAI,SAAAC,GACpB,OACE,yBACE,0BAAOA,EAAMC,QADND,EAAME,GAIlB,OAGH,0BAAM,6BAMhB,4BACE,2BACE,yBACE,SAAC,KAAD,CAAMZ,GAAG,OAAOP,MAAOF,EAAvB,SAAqC,YAIvC,yBACE,SAAC,KAAD,CAAMS,GAAG,UAAUP,MAAOF,EAA1B,SAAwC,kBAK5C,SAAC,EAAAsB,SAAD,WACE,SAAC,KAAD,WAKT,C","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BackContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const MovieDetailsComponent = styled.div`\n  display: flex;\n  gap: 30px;\n`;\n","import React, { Suspense, useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { getMovieDetails } from 'services/API';\nimport { BackContainer, MovieDetailsComponent } from './MovieDetails.styled';\n\nfunction MoviesDetails() {\n  const [movieData, setMovieData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const location = useLocation();\n  const { movieId } = useParams();\n  const backLocation = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchMoviesData = async () => {\n      setIsLoading(true);\n      try {\n        const result = await getMovieDetails(movieId);\n        setMovieData(result);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMoviesData();\n  }, [movieId]);\n  return (\n    <>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      {movieData !== null && (\n        <>\n          <BackContainer>\n            <NavLink to={backLocation.current}>Go Back</NavLink>\n          </BackContainer>\n          <MovieDetailsComponent>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${movieData.poster_path}`}\n              alt={movieData.title}\n            />\n            <div>\n              <h1>{movieData.title}</h1>\n              <h2>User Score</h2>\n              <p>{movieData.vote_average}</p>\n              <h2>Overview</h2>\n              <p>{movieData.overview}</p>\n              <h2>Genres</h2>\n              {movieData.genres ? (\n                <ul>\n                  {movieData.genres.map(genre => {\n                    return (\n                      <li key={genre.id}>\n                        <span>{genre.name}</span>\n                      </li>\n                    );\n                  })}\n                </ul>\n              ) : (\n                <span>No information</span>\n              )}\n            </div>\n          </MovieDetailsComponent>\n        </>\n      )}\n      <div>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={backLocation}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={backLocation}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Suspense>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n}\n\nexport default MoviesDetails;\n"],"names":["BackContainer","styled","MovieDetailsComponent","useState","movieData","setMovieData","isLoading","setIsLoading","error","setError","location","useLocation","movieId","useParams","backLocation","useRef","state","from","useEffect","fetchMoviesData","getMovieDetails","result","message","to","current","src","poster_path","alt","title","vote_average","overview","genres","map","genre","name","id","Suspense"],"sourceRoot":""}